html,
body {
    margin: 0;
    padding: 0;
    height: 100%;
}

body {
    display: flex;
}

#sidebar {
    user-select: none;
    display: flex;
    flex-direction: column;
    height: -webkit-fill-available;
    flex-shrink: 0;
    background-color: var(--container-back);
    padding: 40px 8px 40px 8px;
    transition: 0.3s;
}

#sidebar a {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 142px;
}

#sidebar a:hover,
#sidebar a.activate {
    background-color: var(--primary);
}

#sidebar a:hover svg path,
#sidebar a.activate svg path {
    fill: var(--secondary);
}

#sidebar #profile {
    pointer-events: none;
    align-self: flex-start;
    margin-top: auto;
    color: var(--primary);
    text-decoration: none;
}

#sidebar #profile #profileImg {
    background-color: var(--primary);
    width: 48px;
    height: 48px;
    border-radius: 48px;
}

#sidebar #profile #profileDetail {
    margin-left: 0px;
    opacity: 0;
    max-width: 0;
    transition: 0.3s;
    font-weight: bold;
    font-size: 17px;
}

#sidebar.opened #profile #profileDetail {
    margin-left: 10px;
    opacity: 1;
    max-width: 100px;
}

#sidebar #hamburger {
    transition: 0.2s;
    padding: 8px;
    align-self: end;
}

#sidebar.opened #hamburger {
    transform: rotateY(-180deg);
    align-self: flex-end;
}

#sidebar a svg path {
    fill: var(--primary)
}

#detail {
    height: 100%;
    flex-grow: 1;
}

#sidebar .sub-menu {
    list-style: none;
    padding: 0;
    margin: 50px 0 0 0;
    display: flex;
    flex-direction: column;
    gap: 30px;
}

#sidebar .sub-menu .menu {
    text-decoration: none;
    color: var(--primary);
    font-size: 20px;
    padding: 10px;
    display: flex;
    transition: 0.3s;
}

#sidebar .sub-menu .menu svg {
    width: 28px;
    height: 28px;
}

#sidebar .sub-menu .menu p {
    margin: 0;
    overflow: hidden;
    transition: 0.3s;
    max-width: 0;
    opacity: 0;
}

#sidebar .sub-menu .menu:hover p {
    color: var(--secondary);
}

#sidebar.opened .sub-menu .menu p {
    margin: 0;
    max-width: 200px;
    opacity: 1;
    margin-left: 15px;
}

.cardContainer {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    padding: 40px;
    height: 90%;
}

.cardContainer h1 {
    user-select: none;
    text-align: center;
    color: var(--text-primary);
    margin-bottom: 75px;
}

.cardContainer h1,
.cardContainer .card:nth-child(4) {
    grid-column: span 2;
}

.card {
    user-select: none;
    background-color: var(--card-primary);
    padding: 40px 20px;
    border-radius: 12px;
    text-align: center;
    cursor: pointer;
    box-shadow: 0px 0px 20px 3px var(--shadow-primary);
}

.roomContainer {
    margin: 90px 70px;
    background-color: var(--container-back);
    height: -webkit-fill-available;
    padding: 20px 50px;
    border-radius: 40px;
    color: var(--text-primary);
    user-select: none;
}

.roomContainer .rooms {
    display: flex;
    gap: 18px;
    flex-direction: column;
}

.roomContainer .room {
    position: relative;
    display: flex;
    align-items: center;
    gap: 20px;
    background-color: var(--room-primary);
    border-radius: 14px;
    height: 55px;
    padding: 0 30px;
    transition: 0.3s;
    cursor: pointer;
}

.roomContainer .room h2{
    margin: 0;
    white-space: nowrap;
}
.roomContainer .room h2:nth-child(1) {
    width: 65px;
}

.roomContainer .room h2 {
    margin: 0;
    white-space: nowrap;
}

.roomContainer .room:hover {
    background-color: var(--primary);
    color: var(--background);
}

.roomContainer .room #enterBtn {
    user-select: none;
    margin-left: auto;
    font-size: 30px;
    text-decoration: none;
    font-weight: bold;
    color: var(--primary);
    transition: 0.3s;
    pointer-events: none;
    opacity: 0;
    transform: translateX(20px);
}

.roomContainer .room.locked #enterBtn {
    color: var(--container-back);
    opacity: 1;
    transform: translateX(0px);
}

.roomContainer .room:hover #enterBtn {
    color: var(--background);
    opacity: 1;
    transform: translateX(0px);
}

.roomContainer .room.locked .lockBlock {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    background-color: var(--shadow-primary);
    opacity: 0.65;
    border-radius: 14px;
}

.roomContainer .room.locked .lockBlock svg {
    width: 37px;
    height: 37px;
    align-self: center;
}

.roomContainer .room.locked .lockBlock svg path {
    fill: var(--primary);
}

.roomContainer .room.locked .lockBlock .pwdInput {
    opacity: 0; /* 기본적으로 투명하게 */
    transform: translateX(-20px); /* 왼쪽으로 살짝 이동시켜 놓음 */
    pointer-events: none; /* 숨겨져 있을 때 클릭되지 않도록 */
    margin-left: 0;
    max-width: 0;
    transition: 0.3s;
}

.roomContainer .room:hover.locked .lockBlock .pwdInput {
    opacity: 1; /* 다시 보이게 */
    transform: translateX(0); /* 원래 위치로 이동 */
    margin-left: 30px;
    pointer-events: auto; /* 다시 클릭 가능하도록 */
    max-width: 200px;
}

.roomContainer .room.locked .lockBlock .pwdInput input {
    background-color: rgba(255, 255, 255, 0.2); /* 반투명한 배경 */
    border: 2px solid var(--primary); /* 테두리 */
    border-radius: 8px; /* 모서리 둥글게 */
    height: 40px;
    padding: 0 10px; /* 내부 좌우 여백 */
    color: var(--text-primary); /* 입력 텍스트 색상 */
    font-size: 16px;
    outline: none; /* 포커스 시 기본 외곽선 제거 */
    box-sizing: border-box; /* padding이 너비에 포함되도록 설정 */
}

.roomContainer .room.locked .lockBlock .pwdInput input::placeholder {
    color: rgba(255, 255, 255, 0.7);
}

/* 입력창을 클릭(포커스)했을 때 스타일 */
.roomContainer .room.locked .lockBlock .pwdInput input:focus {
    border-color: #fff; /* 포커스 시 테두리 색상 변경 */
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5); /* 은은한 그림자 효과 */
}
